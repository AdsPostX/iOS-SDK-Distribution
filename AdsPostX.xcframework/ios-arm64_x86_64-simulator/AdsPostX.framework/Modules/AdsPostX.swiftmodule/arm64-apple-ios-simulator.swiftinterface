// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AdsPostX
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AdsPostX
import Foundation
import Network
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
extension UIKit.UIApplication {
  @_Concurrency.MainActor(unsafe) public var mainKeyWindow: UIKit.UIWindow? {
    get
  }
  @_Concurrency.MainActor(unsafe) public var mainViewController: UIKit.UIViewController? {
    get
  }
  @_Concurrency.MainActor(unsafe) public func topViewController(controller: UIKit.UIViewController?) -> UIKit.UIViewController?
}
public enum AdPostxEnvironment : Swift.String {
  case live
  case test
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum AdsPostxError : Swift.Error {
  case invalidAccountId
  case sdkAlreadyInitialized
  case invalidUserEmail
  case missingUserEmail
  case initSDKFailed
  case invalidFirstName
  case invalidLastName
  case invalidMobileNumber
  case invalidconfirmationref
  case invalidAmount
  case invalidCurrency
  case invalidPaymentType
  case invalidccbin
  case invalidLanguage
  case invalidCountry
  case invalidZipCode
  case customError(Swift.Error)
}
extension AdsPostX.AdsPostxError : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers final public class AdsPostx {
  public static func getAttributes() -> Swift.Dictionary<Swift.String, Any?>?
  public typealias Void = ()
  public static func initWith(accountId: Swift.String, attributes: Swift.Dictionary<Swift.String, Any>? = nil, completion: @escaping (Swift.Result<AdsPostX.AdsPostx.Void, Swift.Error>) -> AdsPostX.AdsPostx.Void)
  public static func EnableDebugLog(_ enableDebugLog: Swift.Bool)
  public static func SetEnvironment(_ testEnvironment: AdsPostX.AdPostxEnvironment)
  public static func getEnvironment() -> Swift.String
  public static func showOffers(attributes: Swift.Dictionary<Swift.String, Any>? = nil, presentationStyle: AdsPostX.OfferPresentationStyle, transparent: Swift.Bool = true, margins: (top: Swift.UInt, bottom: Swift.UInt, left: Swift.UInt, right: Swift.UInt) = (5,5,5,5), onLoad: @escaping () -> AdsPostX.AdsPostx.Void, onError: @escaping (AdsPostX.AdsPostxError) -> AdsPostX.AdsPostx.Void, onDismiss: @escaping () -> AdsPostX.AdsPostx.Void)
  public static func supportedInterfaceOrientations(_ supportedOrientations: UIKit.UIInterfaceOrientationMask) -> UIKit.UIInterfaceOrientationMask
  @objc deinit
}
public enum OfferPresentationStyle {
  case fullScreen
  case popup
  public static func == (a: AdsPostX.OfferPresentationStyle, b: AdsPostX.OfferPresentationStyle) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension AdsPostX.AdPostxEnvironment : Swift.Equatable {}
extension AdsPostX.AdPostxEnvironment : Swift.Hashable {}
extension AdsPostX.AdPostxEnvironment : Swift.RawRepresentable {}
extension AdsPostX.OfferPresentationStyle : Swift.Equatable {}
extension AdsPostX.OfferPresentationStyle : Swift.Hashable {}

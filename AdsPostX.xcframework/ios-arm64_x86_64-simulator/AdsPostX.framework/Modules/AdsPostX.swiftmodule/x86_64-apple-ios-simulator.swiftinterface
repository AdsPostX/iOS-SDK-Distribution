// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name AdsPostX
@_exported import AdsPostX
import Network
import Swift
import UIKit
import WebKit
import _Concurrency
public protocol AdsPostXUserCreatable {
  var email: Swift.String { get set }
  var firstName: Swift.String { get set }
  var lastName: Swift.String { get set }
  var mobile: Swift.String { get set }
  var confirmationref: Swift.String { get set }
  var amount: Swift.Double { get set }
  var currency: Swift.String { get set }
  var paymentType: Swift.String { get set }
  var ccbin: Swift.String { get set }
  var language: Swift.String { get set }
  var address: AdsPostX.AdsPostXUserAddressCreatable? { get set }
}
public protocol AdsPostXUserAddressCreatable {
  var zipCode: Swift.String { get set }
  var country: Swift.String { get set }
}
public struct AdsPostXUser : AdsPostX.AdsPostXUserCreatable {
  public var email: Swift.String
  public var firstName: Swift.String
  public var lastName: Swift.String
  public var mobile: Swift.String
  public var confirmationref: Swift.String
  public var amount: Swift.Double
  public var currency: Swift.String
  public var paymentType: Swift.String
  public var ccbin: Swift.String
  public var language: Swift.String
  public var address: AdsPostX.AdsPostXUserAddressCreatable?
  public init(email: Swift.String = "", firstName: Swift.String = "", lastName: Swift.String = "", mobile: Swift.String = "", confirmationref: Swift.String = "", amount: Swift.Double = 0, currency: Swift.String = "", paymentType: Swift.String = "", ccbin: Swift.String = "", language: Swift.String = "", address: AdsPostX.AdsPostXUserAddressCreatable? = nil)
}
public struct AdsPostXUserAddress : AdsPostX.AdsPostXUserAddressCreatable {
  public var zipCode: Swift.String
  public var country: Swift.String
  public init(zipCode: Swift.String = "", country: Swift.String = "")
}
public enum AdPostxEnvironment {
  case live
  case test
  public static func == (a: AdsPostX.AdPostxEnvironment, b: AdsPostX.AdPostxEnvironment) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum AdPostxError : Swift.Error {
  case invalidId
  case customError(Swift.Error)
}
extension AdsPostX.AdPostxError : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers final public class AdPostx {
  public static func initWith(accountId: Swift.String, isLogEnable: Swift.Bool = false, environment: AdsPostX.AdPostxEnvironment = .live, user: AdsPostX.AdsPostXUserCreatable? = nil, completion: @escaping (Swift.Result<Swift.Bool, Swift.Error>) -> Swift.Void)
  public static func showOffers(user: AdsPostX.AdsPostXUserCreatable? = nil, onLoad: @escaping () -> Swift.Void, onUnload: @escaping () -> Swift.Void)
  @objc deinit
}
